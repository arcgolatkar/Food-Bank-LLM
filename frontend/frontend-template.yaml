AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Food Bank Chatbot Frontend deployment'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the services will be deployed

  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: First public subnet for ALB

  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Second public subnet for ALB

  ECRRepositoryURI:
    Type: String
    Description: URI of the ECR repository with the frontend image
    Default: ''

  ContainerImage:
    Type: String
    Description: Frontend container image (including tag)
    Default: 'latest'

  BackendURL:
    Type: String
    Description: URL of the backend service
    Default: ''

Resources:
  # ECS Cluster - with a different name
  FrontendCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: FoodBankFrontendCluster

  # Security Groups
  FrontendALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the frontend ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  FrontendTaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the frontend ECS tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8501
          ToPort: 8501
          SourceSecurityGroupId: !Ref FrontendALBSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

  # We'll just reference the existing log group in container definitions
  # No CloudWatch Logs resource creation

  # ECS Task Execution Role
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # ECS Task Role
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CloudWatchLogsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: '*'

  # Frontend Task Definition
  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: foodbank-frontend
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref TaskExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: foodbank-frontend
          Image: !Join ['', [!Ref ECRRepositoryURI, ':', !Ref ContainerImage]]
          Essential: true
          PortMappings:
            - ContainerPort: 8501
              HostPort: 8501
              Protocol: tcp
          Environment:
            - Name: BACKEND_URL
              Value: !Ref BackendURL
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: '/ecs/foodbank-frontend'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # Frontend Target Group
  FrontendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: frontend-target-group
      Port: 8501
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3

  # Frontend ALB
  FrontendALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: frontend-alb
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref FrontendALBSecurityGroup

  # Frontend ALB Listener
  FrontendListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FrontendTargetGroup
      LoadBalancerArn: !Ref FrontendALB
      Port: 80
      Protocol: HTTP

  # Frontend ECS Service
  FrontendService:
    Type: AWS::ECS::Service
    DependsOn: FrontendListener
    Properties:
      ServiceName: foodbank-frontend
      Cluster: !Ref FrontendCluster
      TaskDefinition: !Ref FrontendTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref FrontendTaskSecurityGroup
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
      LoadBalancers:
        - ContainerName: foodbank-frontend
          ContainerPort: 8501
          TargetGroupArn: !Ref FrontendTargetGroup

Outputs:
  FrontendURL:
    Description: URL of the frontend service
    Value: !Join ['', ['http://', !GetAtt FrontendALB.DNSName]]
  
  FrontendServiceArn:
    Description: ARN of the frontend ECS service
    Value: !Ref FrontendService
  
  FrontendTaskDefinitionArn:
    Description: ARN of the frontend task definition
    Value: !Ref FrontendTaskDefinition
  
  FrontendClusterName:
    Description: Name of the frontend ECS cluster
    Value: !Ref FrontendCluster