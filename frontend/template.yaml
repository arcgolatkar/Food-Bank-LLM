Resources:
  # ... (ECR Repo, LogGroup, Roles, Task Definition, Security Group for Frontend)

  # --- Load Balancer Security Group ---
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${AWS::StackName}-ALB-SG'
      GroupDescription: Allows inbound HTTP/HTTPS traffic to ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80 # Allow HTTP
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # - IpProtocol: tcp # Uncomment if using HTTPS
        #   FromPort: 443
        #   ToPort: 443
        #   CidrIp: 0.0.0.0/0

  # --- Application Load Balancer ---
  PublicLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
          Name: !Sub '${AWS::StackName}-alb'
          Scheme: internet-facing
          Subnets: !Ref SubnetIds # Use PUBLIC subnets for internet-facing ALB
          SecurityGroups:
              - !Ref LoadBalancerSecurityGroup
          # Type: application # Default

  # --- Target Group for Frontend ---
  FrontendTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
          Name: !Sub '${AWS::StackName}-frontend-tg'
          VpcId: !Ref VpcId
          Protocol: HTTP
          Port: 3000 # CHANGE to your frontend container port
          TargetType: ip
          HealthCheck:
              Protocol: HTTP
              Path: / # Or your health check endpoint
              IntervalSeconds: 30
              TimeoutSeconds: 5
              HealthyThresholdCount: 2
              UnhealthyThresholdCount: 2
          # Important: Link the Frontend Service Security Group to allow traffic from the ALB
          # (Modify FrontendSecurityGroup Ingress rule to allow traffic from LoadBalancerSecurityGroup)

  # --- Load Balancer Listener ---
  HttpListener: # For HTTP traffic on port 80
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
          DefaultActions:
              - Type: forward
                TargetGroupArn: !Ref FrontendTargetGroup
          LoadBalancerArn: !Ref PublicLoadBalancer
          Port: 80
          Protocol: HTTP
  # HttpsListener: # Optional: Add for HTTPS (Requires ACM Certificate)
  #     Type: AWS::ElasticLoadBalancingV2::Listener
  #     Properties:
  #         Certificates:
  #             - CertificateArn: arn:aws:acm:REGION:ACCOUNT_ID:certificate/CERTIFICATE_ID # Get from ACM Parameter or input
  #         DefaultActions: ...
  #         LoadBalancerArn: !Ref PublicLoadBalancer
  #         Port: 443
  #         Protocol: HTTPS

  # --- Update Frontend ECS Service ---
  # Modify the FrontendService definition:
  FrontendService:
    Type: AWS::ECS::Service
    Properties:
      # ... (Cluster, TaskDefinition, DesiredCount, LaunchType, NetworkConfiguration like before)
      LoadBalancers: # Add this section
        - ContainerName: frontend-container # Match name in Task Definition
          ContainerPort: 3000 # CHANGE to your frontend container port
          TargetGroupArn: !Ref FrontendTargetGroup
      DependsOn: # Ensure Listener is created before service tries to register
        - HttpListener
        # - HttpsListener # If using HTTPS

Outputs:
  # ... (Frontend Service Name, Task Def Arn, ECR Repo URI)
  LoadBalancerDNSName:
    Description: The public DNS name of the Application Load Balancer
    Value: !GetAtt PublicLoadBalancer.DNSName
  LoadBalancerHostedZoneId:
     Description: The Hosted Zone ID of the Application Load Balancer
     Value: !GetAtt PublicLoadBalancer.CanonicalHostedZoneID